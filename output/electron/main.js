import{ipcMain as o,app as t,BrowserWindow as f}from"electron";import a from"path";import c from"fs/promises";function g(e){o.handle("window:minimize",()=>{e.minimize()}),o.handle("window:maximize",()=>(e.isMaximized()?e.unmaximize():e.maximize(),e.isMaximized())),o.handle("window:close",()=>{e.close()}),o.handle("window:isMaximized",()=>e.isMaximized())}function m(){o.removeAllListeners("window:minimize"),o.removeAllListeners("window:maximize"),o.removeAllListeners("window:close"),o.removeAllListeners("window:isMaximized")}const u=!t.isPackaged;function d(){const e=new f({width:800,height:600,minWidth:200,minHeight:200,frame:!1,titleBarStyle:"hidden",webPreferences:{nodeIntegration:!1,contextIsolation:!0,webSecurity:!1,preload:a.join(process.cwd(),"output","electron","preload","preload.js")}});return u&&(e.maximize(),e.webContents.openDevTools()),g(e),w(e),e}function w(e){if(u)e.loadURL("http://localhost:5173").catch(()=>{console.log("Dev server not ready, retrying..."),setTimeout(()=>e.loadURL("http://localhost:5173"),1e3)});else{const s=a.join(process.cwd(),"output","dist","index.html");e.loadFile(s)}}async function l(){const e=t.getPath("userData"),s=a.join(e,"config");try{await c.mkdir(s,{recursive:!0})}catch(r){r instanceof Error?console.error("Error creando directorio de configuración:",r.message):console.error("Error creando directorio de configuración (tipo inesperado):",String(r))}return s}function h(){o.handle("fs:saveUserConfigJson",async(e,s,r)=>{console.log("guardando settings");try{const n=await l(),i=a.join(n,`${s}.json`);return await c.writeFile(i,JSON.stringify(r,null,2),"utf-8"),{success:!0}}catch(n){let i;return n instanceof Error?i=n.message:i=String(n),console.error(`Error guardando ${s}.json:`,i),{success:!1,error:i}}}),o.handle("fs:loadUserConfigJson",async(e,s)=>{try{const r=await l(),n=a.join(r,`${s}.json`),i=await c.readFile(n,"utf-8");return{success:!0,data:JSON.parse(i)}}catch(r){return r instanceof Error?r.code==="ENOENT"?{success:!1,error:"FILE_NOT_FOUND"}:(console.error(`Error cargando ${s}.json:`,r.message),{success:!1,error:r.message}):(console.error(`Error cargando ${s}.json (tipo inesperado):`,String(r)),{success:!1,error:String(r)})}}),o.handle("fs:userConfigExists",async(e,s)=>{try{const r=await l(),n=a.join(r,`${s}.json`);return await c.access(n),!0}catch{return!1}})}function p(){o.removeAllListeners("fs:saveUserConfigJson"),o.removeAllListeners("fs:loadUserConfigJson"),o.removeAllListeners("fs:userConfigExists")}t.whenReady().then(()=>{h(),d(),t.on("activate",function(){f.getAllWindows().length===0&&d()})});t.on("window-all-closed",function(){process.platform!=="darwin"&&t.quit()});t.on("before-quit",()=>{m(),p()});
